# Copyright 2021 VMware
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#@ load("@ytt:data", "data")
---
apiVersion: v1
kind: Namespace
metadata:
  name: cartographer-system

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartographer-controller
  namespace: cartographer-system
  labels:
    app.kubernetes.io/name: cartographer-controller
    app.kubernetes.io/version: #@ data.values.version
spec:
  selector:
    matchLabels:
      app: cartographer-controller
  replicas: 1
  template:
    metadata:
      labels:
        app: cartographer-controller
    spec:
      serviceAccount: cartographer-controller
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: cartographer-webhook
      containers:
        - name: cartographer-controller
          image: ko://github.com/vmware-tanzu/cartographer/cmd/cartographer
          args:
            - -cert-dir=/cert
            - -metrics-port=9998
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          volumeMounts:
            - mountPath: /cert
              name: cert
              readOnly: true
          resources:
            limits:
              cpu: 1
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9998"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  name: cartographer-controller-metrics-service
  namespace: cartographer-system
spec:
  ports:
    - port: 9998
      targetPort: 9998
  selector:
    app: cartographer-controller

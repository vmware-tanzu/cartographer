# Copyright 2021 VMware
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: clusterruntemplates.carto.run
spec:
  group: carto.run
  names:
    kind: ClusterRunTemplate
    listKind: ClusterRunTemplateList
    plural: clusterruntemplates
    shortNames:
    - crt
    singular: clusterruntemplate
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'Spec describes the run template. More info: https://cartographer.sh/docs/latest/reference/runnable/#clusterruntemplate'
            properties:
              outputs:
                additionalProperties:
                  type: string
                description: "Outputs are a named list of jsonPaths that are used
                  to gather results from the last successful object stamped by the
                  template. E.g: \tmy-output: .status.results[?(@.name==\"IMAGE-DIGEST\")].value
                  Note: outputs are only filled on the runnable when the templated
                  object has a Succeeded condition with a Status of True E.g:     status.conditions[?(@.type==\"Succeeded\")].status
                  == True a runnable creating an object without a Succeeded condition
                  (like a Job or ConfigMap) will never display an output"
                type: object
              template:
                description: 'Template defines a resource template for a Kubernetes
                  Resource or Custom Resource which is applied to the server each
                  time the blueprint is applied. Templates support simple value interpolation
                  using the $()$ marker format. For more information, see: https://cartographer.sh/docs/latest/templating/
                  You should not define the namespace for the resource - it will automatically
                  be created in the owner namespace. If the namespace is specified
                  and is not the owner namespace, the resource will fail to be created.'
                type: object
                x-kubernetes-preserve-unknown-fields: true
            required:
            - template
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true

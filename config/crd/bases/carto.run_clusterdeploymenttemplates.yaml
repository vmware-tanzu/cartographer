# Copyright 2021 VMware
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clusterdeploymenttemplates.carto.run
spec:
  group: carto.run
  names:
    kind: ClusterDeploymentTemplate
    listKind: ClusterDeploymentTemplateList
    plural: clusterdeploymenttemplates
    shortNames:
    - cdt
    singular: clusterdeploymenttemplate
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'Spec describes the deployment template. More info: https://cartographer.sh/docs/latest/reference/template/#clusterdeploymenttemplate'
            properties:
              observedCompletion:
                description: ObservedCompletion describe the criteria for determining
                  that the templated object completed configuration of environment.
                  These criteria assert completion when metadata.Generation and status.ObservedGeneration
                  match, AND success or failure criteria match. Cannot specify both
                  ObservedMatches and ObservedCompletion.
                properties:
                  failed:
                    description: FailedCondition, when matched, indicates that the
                      input did not deploy successfully.
                    properties:
                      key:
                        description: 'Key is a jsonPath expression pointing to the
                          field to inspect on the templated object, eg: ''status.conditions[?(@.type=="Succeeded")].status'''
                        type: string
                      value:
                        description: Value is the expected value that, when matching
                          the key's actual value, makes this condition true.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  succeeded:
                    description: SucceededCondition, when matched, indicates that
                      the input was successfully deployed.
                    properties:
                      key:
                        description: 'Key is a jsonPath expression pointing to the
                          field to inspect on the templated object, eg: ''status.conditions[?(@.type=="Succeeded")].status'''
                        type: string
                      value:
                        description: Value is the expected value that, when matching
                          the key's actual value, makes this condition true.
                        type: string
                    required:
                    - key
                    - value
                    type: object
                required:
                - succeeded
                type: object
              observedMatches:
                description: ObservedMatches describe the criteria for determining
                  that the templated object completed configuration of environment.
                  These criteria assert completion when an output (usually a field
                  in .status) matches an input (usually a field in .spec) Cannot specify
                  both ObservedMatches and ObservedCompletion.
                items:
                  properties:
                    input:
                      description: Input is a jsonPath to a value that is fulfilled
                        before the templated object is reconciled. Usually a value
                        in the .spec of the object
                      type: string
                    output:
                      description: Output is a jsonPath to a value that is fulfilled
                        after the templated object is reconciled. Usually a value
                        in the .status of the object
                      type: string
                  required:
                  - input
                  - output
                  type: object
                type: array
              params:
                description: 'Additional parameters. See: https://cartographer.sh/docs/latest/architecture/#parameter-hierarchy'
                items:
                  properties:
                    default:
                      description: DefaultValue of the parameter. Causes the parameter
                        to be optional; If the Owner or Template does not specify
                        this parameter, this value is used.
                      x-kubernetes-preserve-unknown-fields: true
                    name:
                      description: Name of a parameter the template accepts from the
                        Blueprint or Owner.
                      type: string
                  required:
                  - default
                  - name
                  type: object
                type: array
              template:
                description: 'Template defines a resource template for a Kubernetes
                  Resource or Custom Resource which is applied to the server each
                  time the blueprint is applied. Templates support simple value interpolation
                  using the $()$ marker format. For more information, see: https://cartographer.sh/docs/latest/templating/
                  You cannot define both Template and Ytt at the same time. You should
                  not define the namespace for the resource - it will automatically
                  be created in the owner namespace. If the namespace is specified
                  and is not the owner namespace, the resource will fail to be created.'
                type: object
                x-kubernetes-preserve-unknown-fields: true
              ytt:
                description: 'Ytt defines a resource template written in `ytt` for
                  a Kubernetes Resource or Custom Resource which is applied to the
                  server each time the blueprint is applied. Templates support simple
                  value interpolation using the $()$ marker format. For more information,
                  see: https://cartographer.sh/docs/latest/templating/ You cannot
                  define both Template and Ytt at the same time. You should not define
                  the namespace for the resource - it will automatically be created
                  in the owner namespace. If the namespace is specified and is not
                  the owner namespace, the resource will fail to be created.'
                type: string
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

# Copyright 2021 VMware
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: release

on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with: {fetch-depth: 0}

      - name: set up Go
        uses: actions/setup-go@v2
        with: {go-version: '^1.17.1'}

      - name: check copyright header
        run: |-
          make copyright
          [ -z "$(git status --porcelain)" ] || git diff HEAD --exit-code

      - name: lint
        run: |-
          make lint
          [ -z "$(git status --porcelain)" ] || git diff HEAD --exit-code

      - name: setup base dependencies
        run: |-
          sudo apt update && sudo apt install -y curl tar
          ./hack/ci/install-binaries.sh ko kubebuilder kuttl gh tree

      - name: setup carvel tooling binaries
        uses: vmware-tanzu/carvel-setup-action@v1

      - name: run tests
        env:
          KUBEBUILDER_ASSETS: /usr/local/bin
        run: make test

      - name: setup the cluster and local registry with all dependencies needed
        run: ./hack/setup.sh cluster example-dependencies

      - name: generate a cartographer release and install it
        env:
          REGISTRY: projectcartographer
          DOCKER_USERNAME: projectcartographer
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |-
          ./hack/docker-login.sh
          ./hack/setup.sh cartographer

      - name: submit the example and assert that it worked
        run: ./hack/setup.sh example

      - name: submit github release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./hack/publish-github-release.sh

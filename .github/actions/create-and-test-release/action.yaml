# Copyright 2021 VMware
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Create and test release'
description: 'Create and test a release of Cartographer'
inputs:
  version:  # id of input
    description: 'release version to create'
    required: true
  docker-registry:
    description: 'docker registry to push image to'
    required: true
  docker-username:
    description: 'username to docker registry'
    required: true
  docker-password:
    description: 'password to docker registry'
    required: true
runs:
  using: "composite"
  steps:
    - name: setup base dependencies
      shell: bash
      run: |
        sudo apt update && sudo apt install -y curl tar
        ./hack/ci/install-binaries.sh ko tree grype

    - name: generate a cartographer release
      shell: bash
      env:
        RELEASE_VERSION: ${{ inputs.version }}
        REGISTRY: ${{ inputs.docker-registry }}
        DOCKER_USERNAME: ${{ inputs.docker-username }}
        DOCKER_PASSWORD: ${{ inputs.docker-password }}
        DOCKER_CONFIG: "~/.docker"
      run: |
        ./hack/docker-login.sh
        ./hack/release.sh

    - uses: actions/upload-artifact@v2
      with:
        name: cartographer.yaml
        path: ./release/cartographer.yaml
        retention-days: 1

    - uses: actions/upload-artifact@v2
      with:
        name: CHANGELOG.md
        path: ./release/CHANGELOG.md
        retention-days: 1

    - name: run e2e example
      shell: bash
      run: |
        ./hack/setup.sh cluster pre-built-cartographer example-dependencies example

    - name: scan image
      shell: bash
      env:
        DOCKER_CONFIG: "~/.docker"
      run: |
        grype $(cat ./release/cartographer.yaml | grep ' image: ' | awk '{print $NF}')

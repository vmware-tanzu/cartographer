{
  "version": 3,
  "sources": ["src/index.ts", "src/constants.ts", "src/yamlMode.ts", "src/languageFeatures.ts", "src/workerManager.ts"],
  "sourcesContent": ["import { Emitter, languages } from 'monaco-editor/esm/vs/editor/editor.api.js';\n\nimport { languageId } from './constants';\nimport { setupMode } from './yamlMode';\n\n// --- YAML configuration and defaults ---------\n\nconst diagnosticDefault: languages.yaml.DiagnosticsOptions = {\n  completion: true,\n  customTags: [],\n  enableSchemaRequest: false,\n  format: true,\n  isKubernetes: false,\n  hover: true,\n  schemas: [],\n  validate: true,\n  yamlVersion: '1.2',\n};\n\nexport function createLanguageServiceDefaults(\n  initialDiagnosticsOptions: languages.yaml.DiagnosticsOptions,\n): languages.yaml.LanguageServiceDefaults {\n  const onDidChange = new Emitter<languages.yaml.LanguageServiceDefaults>();\n  let diagnosticsOptions = initialDiagnosticsOptions;\n\n  const languageServiceDefaults: languages.yaml.LanguageServiceDefaults = {\n    get onDidChange() {\n      return onDidChange.event;\n    },\n\n    get languageId() {\n      return languageId;\n    },\n\n    get diagnosticsOptions() {\n      return diagnosticsOptions;\n    },\n\n    setDiagnosticsOptions(options) {\n      diagnosticsOptions = { ...diagnosticDefault, ...options };\n      onDidChange.fire(languageServiceDefaults);\n    },\n  };\n\n  return languageServiceDefaults;\n}\n\nconst yamlDefaults = createLanguageServiceDefaults(diagnosticDefault);\n\n// Export API\nfunction createAPI(): typeof languages.yaml {\n  return {\n    yamlDefaults,\n  };\n}\nlanguages.yaml = createAPI();\n\n// --- Registration to monaco editor ---\n\nlanguages.register({\n  id: languageId,\n  extensions: ['.yaml', '.yml'],\n  aliases: ['YAML', 'yaml', 'YML', 'yml'],\n  mimetypes: ['application/x-yaml'],\n});\n\nlanguages.onLanguage('yaml', () => {\n  setupMode(yamlDefaults);\n});\n\n/**\n * Configure `monaco-yaml` diagnostics options.\n *\n * @param options - The options to set.\n */\nexport function setDiagnosticsOptions(options: languages.yaml.DiagnosticsOptions = {}): void {\n  languages.yaml.yamlDefaults.setDiagnosticsOptions(options);\n}\n", "export const languageId = 'yaml';\n", "import { languages } from 'monaco-editor/esm/vs/editor/editor.api.js';\n\nimport { languageId } from './constants';\nimport {\n  createCompletionItemProvider,\n  createDefinitionProvider,\n  createDiagnosticsAdapter,\n  createDocumentFormattingEditProvider,\n  createDocumentSymbolProvider,\n  createHoverProvider,\n  createLinkProvider,\n} from './languageFeatures';\nimport { createWorkerManager } from './workerManager';\n\nconst richEditConfiguration: languages.LanguageConfiguration = {\n  comments: {\n    lineComment: '#',\n  },\n  brackets: [\n    ['{', '}'],\n    ['[', ']'],\n    ['(', ')'],\n  ],\n  autoClosingPairs: [\n    { open: '{', close: '}' },\n    { open: '[', close: ']' },\n    { open: '(', close: ')' },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n  ],\n  surroundingPairs: [\n    { open: '{', close: '}' },\n    { open: '[', close: ']' },\n    { open: '(', close: ')' },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n  ],\n\n  onEnterRules: [\n    {\n      beforeText: /:\\s*$/,\n      action: { indentAction: languages.IndentAction.Indent },\n    },\n  ],\n};\n\nexport function setupMode(defaults: languages.yaml.LanguageServiceDefaults): void {\n  const worker = createWorkerManager(defaults);\n\n  languages.registerCompletionItemProvider(languageId, createCompletionItemProvider(worker));\n  languages.registerHoverProvider(languageId, createHoverProvider(worker));\n  languages.registerDefinitionProvider(languageId, createDefinitionProvider(worker));\n  languages.registerDocumentSymbolProvider(languageId, createDocumentSymbolProvider(worker));\n  languages.registerDocumentFormattingEditProvider(\n    languageId,\n    createDocumentFormattingEditProvider(worker),\n  );\n  languages.registerLinkProvider(languageId, createLinkProvider(worker));\n  createDiagnosticsAdapter(worker, defaults);\n  languages.setLanguageConfiguration(languageId, richEditConfiguration);\n}\n", "import {\n  editor,\n  IDisposable,\n  languages,\n  MarkerSeverity,\n  Position,\n  Range,\n  Uri,\n} from 'monaco-editor/esm/vs/editor/editor.api.js';\nimport * as ls from 'vscode-languageserver-types';\nimport { CustomFormatterOptions } from 'yaml-language-server/lib/esm/languageservice/yamlLanguageService.js';\n\nimport { languageId } from './constants';\nimport { YAMLWorker } from './yamlWorker';\n\nexport type WorkerAccessor = (...more: Uri[]) => PromiseLike<YAMLWorker>;\n\n// --- diagnostics --- ---\n\nfunction toSeverity(lsSeverity: ls.DiagnosticSeverity): MarkerSeverity {\n  switch (lsSeverity) {\n    case ls.DiagnosticSeverity.Error:\n      return MarkerSeverity.Error;\n    case ls.DiagnosticSeverity.Warning:\n      return MarkerSeverity.Warning;\n    case ls.DiagnosticSeverity.Information:\n      return MarkerSeverity.Info;\n    case ls.DiagnosticSeverity.Hint:\n      return MarkerSeverity.Hint;\n    default:\n      return MarkerSeverity.Info;\n  }\n}\n\nfunction toDiagnostics(diag: ls.Diagnostic): editor.IMarkerData {\n  return {\n    severity: toSeverity(diag.severity),\n    startLineNumber: diag.range.start.line + 1,\n    startColumn: diag.range.start.character + 1,\n    endLineNumber: diag.range.end.line + 1,\n    endColumn: diag.range.end.character + 1,\n    message: diag.message,\n    code: String(diag.code),\n    source: diag.source,\n  };\n}\n\nexport function createDiagnosticsAdapter(\n  getWorker: WorkerAccessor,\n  defaults: languages.yaml.LanguageServiceDefaults,\n): void {\n  const listeners = new Map<string, IDisposable>();\n\n  const resetSchema = async (resource: Uri): Promise<void> => {\n    const worker = await getWorker();\n    worker.resetSchema(String(resource));\n  };\n\n  const doValidate = async (resource: Uri): Promise<void> => {\n    const worker = await getWorker(resource);\n    const diagnostics = await worker.doValidation(String(resource));\n    const markers = diagnostics.map(toDiagnostics);\n    const model = editor.getModel(resource);\n    // Return value from getModel can be null if model not found\n    // (e.g. if user navigates away from editor)\n    if (model && model.getLanguageId() === languageId) {\n      editor.setModelMarkers(model, languageId, markers);\n    }\n  };\n\n  const onModelAdd = (model: editor.IModel): void => {\n    if (model.getLanguageId() !== languageId) {\n      return;\n    }\n\n    let handle: ReturnType<typeof setTimeout>;\n    listeners.set(\n      String(model.uri),\n      model.onDidChangeContent(() => {\n        clearTimeout(handle);\n        handle = setTimeout(() => doValidate(model.uri), 500);\n      }),\n    );\n\n    doValidate(model.uri);\n  };\n\n  const onModelRemoved = (model: editor.IModel): void => {\n    editor.setModelMarkers(model, languageId, []);\n    const uriStr = String(model.uri);\n    const listener = listeners.get(uriStr);\n    if (listener) {\n      listener.dispose();\n      listeners.delete(uriStr);\n    }\n  };\n\n  editor.onDidCreateModel(onModelAdd);\n  editor.onWillDisposeModel((model) => {\n    onModelRemoved(model);\n    resetSchema(model.uri);\n  });\n  editor.onDidChangeModelLanguage((event) => {\n    onModelRemoved(event.model);\n    onModelAdd(event.model);\n    resetSchema(event.model.uri);\n  });\n  defaults.onDidChange(() => {\n    for (const model of editor.getModels()) {\n      if (model.getLanguageId() === languageId) {\n        onModelRemoved(model);\n        onModelAdd(model);\n      }\n    }\n  });\n\n  for (const model of editor.getModels()) {\n    onModelAdd(model);\n  }\n}\n\n// --- completion ------\n\nfunction fromPosition(position: Position): ls.Position {\n  if (!position) {\n    return;\n  }\n  return { character: position.column - 1, line: position.lineNumber - 1 };\n}\n\nfunction toRange(range: ls.Range): Range {\n  if (!range) {\n    return;\n  }\n  return new Range(\n    range.start.line + 1,\n    range.start.character + 1,\n    range.end.line + 1,\n    range.end.character + 1,\n  );\n}\n\nfunction toCompletionItemKind(kind: ls.CompletionItemKind): languages.CompletionItemKind {\n  const mItemKind = languages.CompletionItemKind;\n\n  switch (kind) {\n    case ls.CompletionItemKind.Text:\n      return mItemKind.Text;\n    case ls.CompletionItemKind.Method:\n      return mItemKind.Method;\n    case ls.CompletionItemKind.Function:\n      return mItemKind.Function;\n    case ls.CompletionItemKind.Constructor:\n      return mItemKind.Constructor;\n    case ls.CompletionItemKind.Field:\n      return mItemKind.Field;\n    case ls.CompletionItemKind.Variable:\n      return mItemKind.Variable;\n    case ls.CompletionItemKind.Class:\n      return mItemKind.Class;\n    case ls.CompletionItemKind.Interface:\n      return mItemKind.Interface;\n    case ls.CompletionItemKind.Module:\n      return mItemKind.Module;\n    case ls.CompletionItemKind.Property:\n      return mItemKind.Property;\n    case ls.CompletionItemKind.Unit:\n      return mItemKind.Unit;\n    case ls.CompletionItemKind.Value:\n      return mItemKind.Value;\n    case ls.CompletionItemKind.Enum:\n      return mItemKind.Enum;\n    case ls.CompletionItemKind.Keyword:\n      return mItemKind.Keyword;\n    case ls.CompletionItemKind.Snippet:\n      return mItemKind.Snippet;\n    case ls.CompletionItemKind.Color:\n      return mItemKind.Color;\n    case ls.CompletionItemKind.File:\n      return mItemKind.File;\n    case ls.CompletionItemKind.Reference:\n      return mItemKind.Reference;\n    default:\n      return mItemKind.Property;\n  }\n}\n\nfunction toTextEdit(textEdit: ls.TextEdit): editor.ISingleEditOperation {\n  if (!textEdit) {\n    return;\n  }\n  return {\n    range: toRange(textEdit.range),\n    text: textEdit.newText,\n  };\n}\n\nexport function createCompletionItemProvider(\n  getWorker: WorkerAccessor,\n): languages.CompletionItemProvider {\n  return {\n    triggerCharacters: [' ', ':'],\n\n    async provideCompletionItems(model, position) {\n      const resource = model.uri;\n\n      const worker = await getWorker(resource);\n      const info = await worker.doComplete(String(resource), fromPosition(position));\n      if (!info) {\n        return;\n      }\n\n      const wordInfo = model.getWordUntilPosition(position);\n      const wordRange = new Range(\n        position.lineNumber,\n        wordInfo.startColumn,\n        position.lineNumber,\n        wordInfo.endColumn,\n      );\n\n      const items = info.items.map((entry) => {\n        const item: languages.CompletionItem = {\n          label: entry.label,\n          insertText: entry.insertText || entry.label,\n          sortText: entry.sortText,\n          filterText: entry.filterText,\n          documentation: entry.documentation,\n          detail: entry.detail,\n          kind: toCompletionItemKind(entry.kind),\n          range: wordRange,\n        };\n        if (entry.textEdit) {\n          item.range = toRange(\n            'range' in entry.textEdit ? entry.textEdit.range : entry.textEdit.replace,\n          );\n          item.insertText = entry.textEdit.newText;\n        }\n        if (entry.additionalTextEdits) {\n          item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\n        }\n        if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n          item.insertTextRules = languages.CompletionItemInsertTextRule.InsertAsSnippet;\n        }\n        return item;\n      });\n\n      return {\n        incomplete: info.isIncomplete,\n        suggestions: items,\n      };\n    },\n  };\n}\n\n// --- definition ------\n\nexport function createDefinitionProvider(getWorker: WorkerAccessor): languages.DefinitionProvider {\n  return {\n    async provideDefinition(model, position) {\n      const resource = model.uri;\n\n      const worker = await getWorker(resource);\n      const definitions = await worker.doDefinition(String(resource), fromPosition(position));\n\n      return definitions?.map((definition) => ({\n        originSelectionRange: definition.originSelectionRange,\n        range: toRange(definition.targetRange),\n        targetSelectionRange: definition.targetSelectionRange,\n        uri: Uri.parse(definition.targetUri),\n      }));\n    },\n  };\n}\n\n// --- hover ------\n\nexport function createHoverProvider(getWorker: WorkerAccessor): languages.HoverProvider {\n  return {\n    async provideHover(model, position) {\n      const resource = model.uri;\n\n      const worker = await getWorker(resource);\n      const info = await worker.doHover(String(resource), fromPosition(position));\n      if (!info) {\n        return;\n      }\n      return {\n        range: toRange(info.range),\n        contents: [{ value: (info.contents as ls.MarkupContent).value }],\n      };\n    },\n  };\n}\n\n// --- document symbols ------\n\nfunction toSymbolKind(kind: ls.SymbolKind): languages.SymbolKind {\n  const mKind = languages.SymbolKind;\n\n  switch (kind) {\n    case ls.SymbolKind.File:\n      return mKind.Array;\n    case ls.SymbolKind.Module:\n      return mKind.Module;\n    case ls.SymbolKind.Namespace:\n      return mKind.Namespace;\n    case ls.SymbolKind.Package:\n      return mKind.Package;\n    case ls.SymbolKind.Class:\n      return mKind.Class;\n    case ls.SymbolKind.Method:\n      return mKind.Method;\n    case ls.SymbolKind.Property:\n      return mKind.Property;\n    case ls.SymbolKind.Field:\n      return mKind.Field;\n    case ls.SymbolKind.Constructor:\n      return mKind.Constructor;\n    case ls.SymbolKind.Enum:\n      return mKind.Enum;\n    case ls.SymbolKind.Interface:\n      return mKind.Interface;\n    case ls.SymbolKind.Function:\n      return mKind.Function;\n    case ls.SymbolKind.Variable:\n      return mKind.Variable;\n    case ls.SymbolKind.Constant:\n      return mKind.Constant;\n    case ls.SymbolKind.String:\n      return mKind.String;\n    case ls.SymbolKind.Number:\n      return mKind.Number;\n    case ls.SymbolKind.Boolean:\n      return mKind.Boolean;\n    case ls.SymbolKind.Array:\n      return mKind.Array;\n    default:\n      return mKind.Function;\n  }\n}\n\nfunction toDocumentSymbol(item: ls.DocumentSymbol): languages.DocumentSymbol {\n  return {\n    detail: item.detail || '',\n    range: toRange(item.range),\n    name: item.name,\n    kind: toSymbolKind(item.kind),\n    selectionRange: toRange(item.selectionRange),\n    children: item.children.map(toDocumentSymbol),\n    tags: [],\n  };\n}\n\nexport function createDocumentSymbolProvider(\n  getWorker: WorkerAccessor,\n): languages.DocumentSymbolProvider {\n  return {\n    async provideDocumentSymbols(model) {\n      const resource = model.uri;\n\n      const worker = await getWorker(resource);\n      const items = await worker.findDocumentSymbols(String(resource));\n      if (!items) {\n        return;\n      }\n      return items.map(toDocumentSymbol);\n    },\n  };\n}\n\nfunction fromFormattingOptions(\n  options: languages.FormattingOptions,\n): CustomFormatterOptions & ls.FormattingOptions {\n  return {\n    tabSize: options.tabSize,\n    insertSpaces: options.insertSpaces,\n    ...options,\n  };\n}\n\nexport function createDocumentFormattingEditProvider(\n  getWorker: WorkerAccessor,\n): languages.DocumentFormattingEditProvider {\n  return {\n    async provideDocumentFormattingEdits(model, options) {\n      const resource = model.uri;\n\n      const worker = await getWorker(resource);\n      const edits = await worker.format(String(resource), fromFormattingOptions(options));\n      if (!edits || edits.length === 0) {\n        return;\n      }\n      return edits.map(toTextEdit);\n    },\n  };\n}\n\nfunction toLink(link: ls.DocumentLink): languages.ILink {\n  return {\n    range: toRange(link.range),\n    tooltip: link.tooltip,\n    url: link.target,\n  };\n}\n\nexport function createLinkProvider(getWorker: WorkerAccessor): languages.LinkProvider {\n  return {\n    async provideLinks(model) {\n      const resource = model.uri;\n\n      const worker = await getWorker(resource);\n      const links = await worker.findLinks(String(resource));\n\n      return {\n        links: links.map(toLink),\n      };\n    },\n  };\n}\n", "import { editor, languages } from 'monaco-editor/esm/vs/editor/editor.api.js';\n\nimport { WorkerAccessor } from './languageFeatures';\nimport { YAMLWorker } from './yamlWorker';\n\n// 2min\nconst STOP_WHEN_IDLE_FOR = 2 * 60 * 1000;\n\nexport function createWorkerManager(\n  defaults: languages.yaml.LanguageServiceDefaults,\n): WorkerAccessor {\n  let worker: editor.MonacoWebWorker<YAMLWorker>;\n  let client: Promise<YAMLWorker>;\n  let lastUsedTime = 0;\n\n  const stopWorker = (): void => {\n    if (worker) {\n      worker.dispose();\n      worker = undefined;\n    }\n    client = undefined;\n  };\n\n  setInterval(() => {\n    if (!worker) {\n      return;\n    }\n    const timePassedSinceLastUsed = Date.now() - lastUsedTime;\n    if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n      stopWorker();\n    }\n  }, 30 * 1000);\n\n  // This is necessary to have updated language options take effect (e.g. schema changes)\n  defaults.onDidChange(() => stopWorker());\n\n  const getClient = (): Promise<YAMLWorker> => {\n    lastUsedTime = Date.now();\n\n    if (!client) {\n      worker = editor.createWebWorker<YAMLWorker>({\n        // Module that exports the create() method and returns a `YAMLWorker` instance\n        moduleId: 'vs/language/yaml/yamlWorker',\n\n        label: defaults.languageId,\n\n        // Passed in to the create() method\n        createData: {\n          languageSettings: defaults.diagnosticsOptions,\n          enableSchemaRequest: defaults.diagnosticsOptions.enableSchemaRequest,\n          isKubernetes: defaults.diagnosticsOptions.isKubernetes,\n          customTags: defaults.diagnosticsOptions.customTags,\n        },\n      });\n\n      client = worker.getProxy();\n    }\n\n    return client;\n  };\n\n  return async (...resources) => {\n    const client = await getClient();\n    await worker.withSyncedResources(resources);\n    return client;\n  };\n}\n"],
  "mappings": "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",
  "names": []
}

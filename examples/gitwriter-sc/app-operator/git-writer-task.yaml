# Copyright 2021 VMware
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: git-writer
spec:
  description: |-
    A task that writes a given set of files (provided as a json base64-encoded)
    to git repository under a specific directory (`./config`).
  params:
    - name: git_repository
      description: The repository path
      type: string
    - name: git_branch
      description: The git branch to read and write
      type: string
      default: "main"
    - name: git_user_email
      description: User email address
      type: string
      default: "example@example.com"
    - name: git_user_name
      description: User name
      type: string
      default: "Example"
    - name: git_commit_message
      description: Message for the git commit
      type: string
      default: "New Commit"
    - name: git_files
      type: string
      description: >
        Base64-encoded json map of files to write to registry, for example -
        eyAiUkVBRE1FLm1kIjogIiMgUmVhZG1lIiB9
  steps:
    - name: git-clone-and-push
      image: paketobuildpacks/build:base
      securityContext:
        runAsUser: 0
      workingDir: /root
      script: |
        #!/usr/bin/env bash

        set -o errexit
        set -o xtrace

        git clone $(params.git_repository) ./repo
        cd repo

        git checkout -b $(params.git_branch) || git checkout $(params.git_branch)
        git pull --rebase origin $(params.git_branch) || true

        git config user.email $(params.git_user_email)
        git config user.name $(params.git_user_name)

        mkdir -p config && rm -rf config/*
        cd config

        echo '$(params.git_files)' | base64 --decode > files.json
        eval "$(cat files.json | jq -r 'to_entries | .[] | @sh "mkdir -p $(dirname \(.key)) && echo \(.value | tojson) > \(.key) && git add \(.key)"')"

        git commit -m "$(params.git_commit_message)"
        git push origin $(params.git_branch)
